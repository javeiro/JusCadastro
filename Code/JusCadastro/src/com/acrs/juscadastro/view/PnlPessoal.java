/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.acrs.juscadastro.view;

import com.acrs.juscadastro.control.ContatoControl;
import com.acrs.juscadastro.util.MaxLengthTextDocument;
import com.acrs.juscadastro.view.interfaces.IPnlPessoal;
import com.toedter.calendar.JDateChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author acrs
 */
public class PnlPessoal extends javax.swing.JPanel implements IPnlPessoal {

    /**
     * Creates new form PContato
     */
    public PnlPessoal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        lblCPFJ = new javax.swing.JLabel();
        txtCPFJ = new javax.swing.JTextField();
        lblNascimento = new javax.swing.JLabel();
        lblEmpresa = new javax.swing.JLabel();
        txtEmpresa = new javax.swing.JTextField();
        lblCargo = new javax.swing.JLabel();
        txtCargo = new javax.swing.JTextField();
        dtcNascimento = new com.toedter.calendar.JDateChooser();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Dados Pessoais"));

        lblNome.setDisplayedMnemonic('m');
        lblNome.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNome.setLabelFor(txtNome);
        lblNome.setText("Nome:");

        txtNome.setDocument(new MaxLengthTextDocument(100));
        txtNome.setText("Allan Carlos do Ros√°rio Souza");
        txtNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtNomeFocusGained(evt);
            }
        });

        lblCPFJ.setDisplayedMnemonic('c');
        lblCPFJ.setLabelFor(txtCPFJ);
        lblCPFJ.setText("CPF/CNPJ:");

        txtCPFJ.setDocument(new MaxLengthTextDocument(14));
        txtCPFJ.setText("10047953780");
        txtCPFJ.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCPFJFocusGained(evt);
            }
        });

        lblNascimento.setDisplayedMnemonic('a');
        lblNascimento.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNascimento.setText("Nascimento:");

        lblEmpresa.setDisplayedMnemonic('s');
        lblEmpresa.setLabelFor(txtEmpresa);
        lblEmpresa.setText("Empresa:");

        txtEmpresa.setDocument(new MaxLengthTextDocument(100));
        txtEmpresa.setText("Mktec Marketing de Relacionamento");
        txtEmpresa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtEmpresaFocusGained(evt);
            }
        });

        lblCargo.setDisplayedMnemonic('r');
        lblCargo.setLabelFor(txtCargo);
        lblCargo.setText("Cargo:");

        txtCargo.setDocument(new MaxLengthTextDocument(50));
        txtCargo.setText("Analista de Sistemas");
        txtCargo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCargoFocusGained(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblNascimento, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                    .addComponent(lblNome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblCPFJ)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCPFJ, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dtcNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblEmpresa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtEmpresa, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblCargo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCargo, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNome)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCPFJ)
                    .addComponent(txtCPFJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNascimento)
                        .addComponent(lblEmpresa)
                        .addComponent(txtEmpresa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblCargo)
                        .addComponent(txtCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(dtcNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNomeFocusGained
        txtNome.selectAll();
    }//GEN-LAST:event_txtNomeFocusGained

    private void txtCPFJFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCPFJFocusGained
        txtCPFJ.selectAll();
    }//GEN-LAST:event_txtCPFJFocusGained

    private void txtEmpresaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmpresaFocusGained
        txtEmpresa.selectAll();
    }//GEN-LAST:event_txtEmpresaFocusGained

    private void txtCargoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCargoFocusGained
        txtCargo.selectAll();
    }//GEN-LAST:event_txtCargoFocusGained

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser dtcNascimento;
    private javax.swing.JLabel lblCPFJ;
    private javax.swing.JLabel lblCargo;
    private javax.swing.JLabel lblEmpresa;
    private javax.swing.JLabel lblNascimento;
    private javax.swing.JLabel lblNome;
    private javax.swing.JTextField txtCPFJ;
    private javax.swing.JTextField txtCargo;
    private javax.swing.JTextField txtEmpresa;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables

    private Integer idContato;

    public void limpar() {
        idContato = null;
        dtcNascimento.setCalendar(null);
        txtCPFJ.setText("");
        txtCargo.setText("");
        txtEmpresa.setText("");
        txtNome.setText("");
    }

    public void habilitar() {
        editar(true);
    }

    public void desabilitar() {
        editar(false);
    }

    private void editar(boolean op) {
        dtcNascimento.setEnabled(op);
        txtCPFJ.setEditable(op);
        txtCargo.setEditable(op);
        txtEmpresa.setEditable(op);
        txtNome.setEditable(op);
    }

    public String validarPreenchimentoCPFJ() {
        if (txtCPFJ.getText().trim().equals("")) {
            txtCPFJ.requestFocus();
            java.awt.Toolkit.getDefaultToolkit().beep();
            return "Por favor, preencher o CPF/CNPJ.";
        }
        return "";
    }

    public String validarUnicidadeCPFJ() {
        String cpfj = txtCPFJ.getText().trim();
        boolean cpfjExiste = false;
        try {
            cpfjExiste = ContatoControl.cpfjExiste(cpfj);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
        if (cpfjExiste && idContato == null) {
            txtCPFJ.requestFocus();
            java.awt.Toolkit.getDefaultToolkit().beep();
            return "CPF/CNPJ j√° est√° cadastrado.";
        }
        return "";
    }

    public String validarPreenchimentoNome() {
        if (txtNome.getText().trim().equals("")) {
            txtNome.requestFocus();
            java.awt.Toolkit.getDefaultToolkit().beep();
            return "Por favor, preencher o nome.";
        }
        return "";
    }

    public String validarUnicidadeNome() {
        String nome = txtNome.getText().trim();
        boolean nomeExiste = false;
        try {
            nomeExiste = ContatoControl.nomeExiste(nome);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
        if (nomeExiste && idContato == null) {
            txtNome.requestFocus();
            java.awt.Toolkit.getDefaultToolkit().beep();
            return "Nome j√° est√° cadastrado.";
        }
        return "";
    }

    public String validarFormatoNascimento() {
        if (dtcNascimento.getCalendar() == null) {
            dtcNascimento.requestFocus();
            java.awt.Toolkit.getDefaultToolkit().beep();
            return "Data de Nascimento n√£o est√° v√°lida.";
        }
        return "";
    }

    public JDateChooser getDtcNascimento() {
        return dtcNascimento;
    }

    public JTextField getTxtCPFJ() {
        return txtCPFJ;
    }

    public JTextField getTxtCargo() {
        return txtCargo;
    }

    public JTextField getTxtEmpresa() {
        return txtEmpresa;
    }

    public JTextField getTxtNome() {
        return txtNome;
    }

    public Integer getIdAgendaTelefonica() {
        return idContato;
    }

    public void setIdAgendaTelefonica(Integer idAgendaTelefonica) {
        this.idContato = idAgendaTelefonica;
    }

}
