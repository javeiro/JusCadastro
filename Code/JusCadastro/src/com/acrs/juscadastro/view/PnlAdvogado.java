/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.acrs.juscadastro.view;

import com.acrs.juscadastro.util.MaxLengthTextDocument;
import com.acrs.juscadastro.view.interfaces.IPnlAdvogado;
import javax.swing.JCheckBox;
import javax.swing.JTextField;

/**
 *
 * @author acrs
 */
public class PnlAdvogado extends javax.swing.JPanel implements IPnlAdvogado {

    private boolean editavel = false;

    /**
     * Creates new form PContato
     */
    public PnlAdvogado() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblOAB = new javax.swing.JLabel();
        txtOAB = new javax.swing.JTextField();
        chkAdvogado = new javax.swing.JCheckBox();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Advogado"));

        lblOAB.setDisplayedMnemonic('o');
        lblOAB.setLabelFor(chkAdvogado);
        lblOAB.setText("OAB:");

        txtOAB.setEditable(false);
        txtOAB.setDocument(new MaxLengthTextDocument(20));
        txtOAB.setText("22234532");
        txtOAB.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtOABFocusGained(evt);
            }
        });

        chkAdvogado.setText("Advogado da Empresa?");
        chkAdvogado.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkAdvogadoStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addComponent(chkAdvogado)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblOAB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtOAB, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(280, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lblOAB)
                .addComponent(txtOAB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(chkAdvogado))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtOABFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtOABFocusGained
        txtOAB.selectAll();
    }//GEN-LAST:event_txtOABFocusGained

    private void chkAdvogadoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkAdvogadoStateChanged
        if (!chkAdvogado.isSelected()) {
            txtOAB.setText("");
            txtOAB.setEditable(false);
        } else {
            if (editavel) {
                txtOAB.requestFocus();
                txtOAB.setEditable(true);
            }
        }
    }//GEN-LAST:event_chkAdvogadoStateChanged

    public void setEditavel(boolean editavel) {
        this.editavel = editavel;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox chkAdvogado;
    private javax.swing.JLabel lblOAB;
    private javax.swing.JTextField txtOAB;
    // End of variables declaration//GEN-END:variables

    public void limpar() {
        txtOAB.setText("");
    }

    public void habilitar() {
        editar(true);
    }

    public void desabilitar() {
        editar(false);
    }

    private void editar(boolean op) {
        chkAdvogado.setEnabled(op);
    }

    public JCheckBox getChkAdvogado() {
        return chkAdvogado;
    }

    public JTextField getTxtOAB() {
        return txtOAB;
    }

    public String validarPreenchimentoOAB() {
        if (chkAdvogado.isSelected()
                && txtOAB.getText().trim().equals("")) {
            txtOAB.requestFocus();
            java.awt.Toolkit.getDefaultToolkit().beep();
            return "Por favor, preencher o n√∫mero da OAB.";
        }
        return "";
    }

}
